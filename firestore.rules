rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isOwner(userId);
    }

    // Subscriptions collection (top-level)
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        resource.data.userId == request.auth.uid
      );
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Budgets collection (top-level)
    match /budgets/{budgetId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        resource.data.userId == request.auth.uid
      );
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Schedule reviews collection (top-level)
    match /scheduleReviews/{userId} {
      allow read: if isAuthenticated() && (
        userId == request.auth.uid
      );
      allow create, update: if isAuthenticated() && (
        userId == request.auth.uid
      );
      allow delete: if isAuthenticated() && (
        userId == request.auth.uid
      );
    }

    // Categories collection (top-level)
    match /categories/{categoryId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        resource.data.userId == request.auth.uid
      );
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Payments collection (top-level)
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        resource == null || 
        resource.data.userId == request.auth.uid
      );
      allow list: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Subscription plans (read-only for authenticated users)
    match /subscriptionPlans/{planId} {
      allow read, list: if isAuthenticated();
      allow write: if false; // Only admin via backend should modify plans
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}